{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartButton.disabled = true;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n\n        if (selectedDate <= new Date()) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n                position: 'topRight',\n            });\n\n            startButton.disabled = true;\n\n            return;\n        }\n\n        userSelectedDate = selectedDate;\n        startButton.disabled = false;\n    },\n  };\n\nflatpickr('#datetime-picker', options);  \n  \nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n}\n\nfunction dateContent(ms) {\n    const { days, hours, minutes, seconds } = convertMs(ms);\n\n    daysEl.textContent = days.toString().padStart(2, '0');\n    hoursEl.textContent = hours.toString().padStart(2, '0');\n    minutesEl.textContent = minutes.toString().padStart(2, '0');\n    secondsEl.textContent = seconds.toString().padStart(2, '0');\n}\n\nstartButton.addEventListener('click', () => {\n    startButton.disabled = true;\n    inputEl.disabled = true;\n\n    timerId = setInterval(() => {\n        const currentDate = new Date();\n        const diff = userSelectedDate - currentDate;\n        dateContent(diff);\n\n        if (diff <= 0) {\n            clearInterval(timerId);\n            dateContent(0);\n            inputEl.disabled = false;\n\n            return;\n        }\n    }, 1000);\n});"],"names":["userSelectedDate","timerId","inputEl","startButton","daysEl","hoursEl","minutesEl","secondsEl","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","dateContent","diff"],"mappings":"+IAKA,IAAIA,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDJ,EAAY,SAAW,GAEvB,MAAMK,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAEpC,GAAIC,GAAgB,IAAI,KAAQ,CAC5BC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UAC1B,CAAa,EAEDR,EAAY,SAAW,GAEvB,MACH,CAEDH,EAAmBU,EACnBP,EAAY,SAAW,EAC1B,CACL,EAEAS,EAAU,mBAAoBJ,CAAO,EAErC,SAASK,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAYL,EAAI,CACrB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAEtDV,EAAO,YAAcW,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACpDV,EAAQ,YAAcW,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACtDV,EAAU,YAAcW,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC1DV,EAAU,YAAcW,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CAC9D,CAEAf,EAAY,iBAAiB,QAAS,IAAM,CACxCA,EAAY,SAAW,GACvBD,EAAQ,SAAW,GAEnBD,EAAU,YAAY,IAAM,CAExB,MAAMmB,EAAOpB,EADO,IAAI,KAIxB,GAFAmB,EAAYC,CAAI,EAEZA,GAAQ,EAAG,CACX,cAAcnB,CAAO,EACrBkB,EAAY,CAAC,EACbjB,EAAQ,SAAW,GAEnB,MACH,CACJ,EAAE,GAAI,CACX,CAAC"}